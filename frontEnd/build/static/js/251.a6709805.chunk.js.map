{"version":3,"file":"static/js/251.a6709805.chunk.js","mappings":"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","sources":["views/approveUser/ApproveAdmin.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Button, Container } from 'react-bootstrap'\r\nimport { message } from 'antd'\r\nimport axois from 'axios'\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CTable,\r\n  CTableHead,\r\n  CTableBody,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n  CTableDataCell,\r\n} from '@coreui/react'\r\nconst ApproveAdmin = () => {\r\n  const [approvalReqUser, setApprovalReqUser] = useState([])\r\n\r\n  const findUserForApproval = async () => {\r\n    try {\r\n      const res = await axois.get('/api/v1/masterAdmin/getAdminForApproval')\r\n      if (res.data.success) {\r\n        setApprovalReqUser(res.data.data)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      message.error('Something went wrong')\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    findUserForApproval()\r\n  }, [])\r\n  const approveUser = async (uniqueId) => {\r\n    try {\r\n      const res = await axois.patch('/api/v1/masterAdmin/approveUser', { uniqueId })\r\n      if (res.data.success) {\r\n        message.success(res.data.message)\r\n        findUserForApproval()\r\n      } else {\r\n        message.error(res.data.message)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      message.error('Something went wrong')\r\n    }\r\n  }\r\n  const rejectUser = async (uniqueId) => {\r\n    try {\r\n      const res = await axois.patch('/api/v1/masterAdmin/rejectUser', { uniqueId })\r\n      if (res.data.success) {\r\n        message.success(res.data.message)\r\n        findUserForApproval()\r\n      } else {\r\n        message.error(res.data.message)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      message.error('Something went wrong')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <CRow className=\"mb-4\">\r\n        <CCol xs>\r\n          <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\r\n            <CTableHead color=\"light\">\r\n              <CTableRow>\r\n                <CTableHeaderCell className=\"text-center\">#</CTableHeaderCell>\r\n                <CTableHeaderCell className=\"text-center\">Transaction Id</CTableHeaderCell>\r\n                <CTableHeaderCell className=\"text-center\">Paid</CTableHeaderCell>\r\n                <CTableHeaderCell className=\"text-center\">Unique Id</CTableHeaderCell>\r\n                <CTableHeaderCell className=\"text-center\">Role </CTableHeaderCell>\r\n                <CTableHeaderCell className=\"text-center\">Name</CTableHeaderCell>\r\n                <CTableDataCell className=\"text-center\" colSpan={2}>\r\n                  Action\r\n                </CTableDataCell>\r\n              </CTableRow>\r\n            </CTableHead>\r\n            <CTableBody>\r\n              {approvalReqUser && approvalReqUser.length > 0 ? (\r\n                approvalReqUser.map((user, index) => (\r\n                  <CTableRow v-for=\"item in tableItems\" key={index + 1}>\r\n                    <CTableDataCell className=\"text-center\">{index + 1}</CTableDataCell>\r\n                    <CTableDataCell className=\"text-center\">{user.transactionId}</CTableDataCell>\r\n                    <CTableDataCell className=\"text-center\">\r\n                      {user.paid ? 'Paid' : 'False'}\r\n                    </CTableDataCell>\r\n                    <CTableDataCell className=\"text-center\">{user.uniqueId}</CTableDataCell>\r\n                    <CTableDataCell className=\"text-center\">{user.role}</CTableDataCell>\r\n                    <CTableDataCell className=\"text-center\">{user.name}</CTableDataCell>\r\n                    <CTableDataCell className=\"text-center\">\r\n                      <Button\r\n                        style={{\r\n                          backgroundColor: 'red',\r\n                          border: 'none',\r\n                        }}\r\n                        className=\"mx-3\"\r\n                        onClick={() => rejectUser(user.uniqueId)}\r\n                      >\r\n                        Reject\r\n                      </Button>\r\n                      <Button\r\n                        className=\"btn-success text-white\"\r\n                        onClick={() => approveUser(user.uniqueId)}\r\n                      >\r\n                        Approve\r\n                      </Button>\r\n                    </CTableDataCell>\r\n                  </CTableRow>\r\n                ))\r\n              ) : (\r\n                <CTableRow>\r\n                  <CTableDataCell colSpan={8} className=\"text-center text-danger\">\r\n                    No Data Found\r\n                  </CTableDataCell>\r\n                </CTableRow>\r\n              )}\r\n            </CTableBody>\r\n          </CTable>\r\n        </CCol>\r\n      </CRow>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ApproveAdmin\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","approvalReqUser","setApprovalReqUser","findUserForApproval","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axois","get","sent","data","success","t0","console","log","message","error","stop","apply","arguments","useEffect","approveUser","_ref2","_callee2","uniqueId","_context2","patch","_x","rejectUser","_ref3","_callee3","_context3","_x2","_jsx","Container","fluid","children","CRow","className","CCol","xs","_jsxs","CTable","align","hover","responsive","CTableHead","color","CTableRow","CTableHeaderCell","CTableDataCell","colSpan","CTableBody","length","map","user","index","transactionId","paid","role","name","Button","style","backgroundColor","border","onClick"],"sourceRoot":""}