{"version":3,"file":"static/js/9422.ff56d860.chunk.js","mappings":"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","sources":["views/purchaseCoupon/Index.js","../node_modules/react-bootstrap/esm/Badge.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport { Badge, Button, Col, Container, Form, Row } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { message } from 'antd'\nimport axios from 'axios'\nimport { setUser } from '../../features/userSlice'\n\nconst Index = () => {\n  const user = useSelector((state) => state.user.user)\n  const [show, setShow] = useState(false)\n  const [couponQty, setCouponQty] = useState(0)\n  const [totalAmount, setTotalAmount] = useState(0)\n  const [couponPurchaseHistory, setCouponPurchaseHistory] = useState([])\n  const dispatch = useDispatch()\n\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  const formattedDate = (date) => {\n    const dateObject = new Date(date)\n    const format = `${dateObject.getFullYear()}-${String(dateObject.getMonth() + 1).padStart(\n      2,\n      '0',\n    )}-${String(dateObject.getDate()).padStart(2, '0')} ${String(dateObject.getHours()).padStart(\n      2,\n      '0',\n    )}:${String(dateObject.getMinutes()).padStart(2, '0')}:${String(\n      dateObject.getSeconds(),\n    ).padStart(2, '0')}`\n\n    return format\n  }\n  const handleInputChange = (e) => {\n    // Get the input value\n    const inputValue = e.target.value;\n\n    // Check if the input is a valid integer\n    if (/^-?\\d*$/.test(inputValue)) {\n      // Update the state with the valid integer value\n      setCouponQty(inputValue);\n      setTotalAmount(inputValue * user.couponPrice)\n    }\n    // If the input is not a valid integer, do nothing (don't update the state)\n  };\n  const handlePurchase = async (e) => {\n    try {\n      e.preventDefault()\n      e.stopPropagation()\n      if(couponQty )\n      if (couponQty === '' || couponQty === 0) {\n        return message.error('Coupon quantity must be greater than 0')\n      }\n      if (couponQty > user.walletBalance / user.couponPrice) {\n        return message.error('Insufficient wallet balance')\n      }\n\n      let amount = couponQty * user.couponPrice\n      const data = {\n        userId: user.uniqueId,\n        singleCouponPrice: user.couponPrice,\n        quantity: couponQty,\n      }\n      const res = await axios.post('/api/v1/retailer/initiateCouponPurchase', data)\n      if (res.data.success) {\n        message.success('Coupon purchase request sent successfully')\n        dispatch(setUser({ ...user, walletBalance: user.walletBalance - amount }))\n        setShow(false)\n      } else {\n        setShow(false)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const getCouponPurchaseHistory = async () => {\n    try {\n      const userId = user._id\n      const res = await axios.post('/api/v1/retailer/getPurchaseCouponHistory', { userId })\n      if (res.data.success) {\n        setCouponPurchaseHistory(res.data.data)\n      } else {\n        message.error(res.data.message)\n      }\n    } catch (error) {}\n  }\n  useEffect(() => {\n    getCouponPurchaseHistory()\n  }, [])\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClose} centered>\n        <Modal.Header closeButton>\n          <Modal.Title>Coupon Request</Modal.Title>\n        </Modal.Header>\n        <Container className=\"p-3\">\n          <Row>\n            <Form noValidate></Form>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <Form.Group as={Col} controlId=\"formName\">\n                  <Form.Label>Coupon</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    type=\"text\"\n                    placeholder=\"P Coupon\"\n                    disabled\n                    value={'P Coupon'}\n                    required\n                  />\n                </Form.Group>\n              </div>\n              <div className=\"col-md-6\">\n                <Form.Group as={Col} controlId=\"formName\">\n                  <Form.Label>Retailer Id</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    type=\"text\"\n                    placeholder=\"Retailer ID\"\n                    disabled\n                    value={user && user.uniqueId}\n                    required\n                  />\n                </Form.Group>\n              </div>\n            </div>\n            <div className=\"row mt-2\">\n              <Form.Group as={Col} controlId=\"formName\">\n                <Form.Label>User Name</Form.Label>\n                <Form.Control\n                  size=\"sm\"\n                  type=\"text\"\n                  placeholder=\"User Name\"\n                  disabled\n                  value={user && user.name}\n                  required\n                />\n              </Form.Group>\n              <div className=\"col-md-4\">\n                <Form.Group as={Col} controlId=\"formName\">\n                  <Form.Label>Coupon Quantity</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    type=\"number\"\n                    placeholder=\"Enter Coupon quantity\"\n                    onChange={(e) => {\n                      handleInputChange(e);\n                      \n                    }}\n                    value={couponQty}\n                    required\n                  />\n                </Form.Group>\n              </div>\n            </div>\n            <div className=\"row mt-2\">\n              <div className=\"col-md-6\">\n                <Form.Group as={Col} controlId=\"formName\">\n                  <Form.Label>Single Coupon Price</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    type=\"number\"\n                    placeholder=\"Enter Coupon quantity\"\n                    value={user && user.couponPrice}\n                    disabled\n                    required\n                  />\n                </Form.Group>\n              </div>\n              <div className=\"col-md-6\">\n                <Form.Group as={Col} controlId=\"formName\">\n                  <Form.Label>Total Amount</Form.Label>\n                  <Form.Control\n                    size=\"sm\"\n                    type=\"number\"\n                    placeholder=\"Total Amount\"\n                    value={totalAmount}\n                    disabled\n                    required\n                  />\n                </Form.Group>\n              </div>\n            </div>\n          </Row>\n        </Container>\n        <div className=\"m-4\">\n          <Container className=\"d-flex justify-content-end\">\n            <Button className=\"myCustomBtn\" onClick={handlePurchase}>\n              Purchase\n            </Button>\n          </Container>\n        </div>\n      </Modal>\n      <Container fluid className='mb-3'>\n        <div className=\"content-header mt-1\">\n          <div className=\"row mb-2\">\n            <div className=\"col-sm-6\">\n            </div>\n            <div className=\"col-sm-6\">\n              <div className=\"d-grid gap-2 d-md-flex justify-content-md-end \">\n                <Button\n                  className=\"myCustomBtn\"\n                  onClick={() => {\n                    handleShow()\n                  }}\n                >\n                  <i className=\"fas fa-plus\" /> Purchase Coupon\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <div className=\"row\">\n                  <div className=\"col-md-8 col-lg-8 col-xl-8\">\n                    <h3 className=\"card-title\">Coupons</h3>\n                  </div>\n                  <div className=\" col-md-2 col-lg-2 col-xl-2\"></div>\n                  {/* <div className=\"col-md-2 col-lg-2 col-xl-2\">\n                    <div className=\"card-tools\">\n                      <div className=\"input-group input-group-sm\">\n                        <input\n                          type=\"text\"\n                          name=\"table_search\"\n                          className=\"form-control float-right search\"\n                          placeholder=\"Search by quantity\"\n                        />\n                        <div className=\"input-group-append\">\n                          <button type=\"submit\" className=\"btn btn-default\">\n                            <i className=\"fas fa-search\" />\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div> */}\n                </div>\n              </div>\n              <div className=\"card-body table-responsive p-0\" style={{ height: 450 }}>\n                <table className=\"table table-head-fixed text-nowrap\">\n                  <thead>\n                    <tr>\n                      <th className=\"text-center\">SN</th>\n                      <th className=\"text-center\">Date &amp; Time</th>\n                      <th className=\"text-center\">Req By</th>\n                      <th className=\"text-center\">Retailer Id</th>\n                      <th className=\"text-center\">Uti Id</th>\n                      <th className=\"text-center\">Qty</th>\n                      <th className=\"text-center\">Price</th>\n                      <th className=\"text-center\">Single Coupon Price</th>\n                      <th className=\"text-center\">Status</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {couponPurchaseHistory && couponPurchaseHistory.length > 0 ? (\n                      couponPurchaseHistory.map((item, idx) => (\n                        <tr key={idx}>\n                          <td className=\"text-center\">{idx + 1}</td>\n                          <td className=\"text-center\">{formattedDate(item.purchaseDate)}</td>\n                          <td className=\"text-center\">{item.retailerId.name}</td>\n                          <td className=\"text-center\">{item.retailerId.uniqueId}</td>\n                          <td className=\"text-center\">\n                            {item.retailerId.utiId ? item.retailerId.utiId : 'N/A'}\n                          </td>\n                          <td className=\"text-center\">{item.quantity}</td>\n                          <td className=\"text-center\">{item.totalPrice}</td>\n                          <td className=\"text-center\">{user && user.couponPrice}</td>\n                          <td className=\"text-center\">\n                            <Badge\n                              className={\n                                `${item.status}` === 'pending' ? 'bg-warning' : 'bg-success'\n                              }\n                            >\n                              {item.status}\n                            </Badge>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td colSpan={9} className=\"text-center text-danger\">\n                          No data found\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </>\n  )\n}\n\nexport default Index\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;"],"names":["user","useSelector","state","_useState","useState","_useState2","_slicedToArray","show","setShow","_useState3","_useState4","couponQty","setCouponQty","_useState5","_useState6","totalAmount","setTotalAmount","_useState7","_useState8","couponPurchaseHistory","setCouponPurchaseHistory","dispatch","useDispatch","formattedDate","date","dateObject","Date","concat","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","getSeconds","handlePurchase","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","amount","data","wrap","_context","prev","next","preventDefault","stopPropagation","abrupt","message","error","walletBalance","couponPrice","userId","uniqueId","singleCouponPrice","quantity","axios","post","sent","success","setUser","_objectSpread","t0","console","log","stop","_x","apply","arguments","getCouponPurchaseHistory","_ref2","_callee2","res","_context2","_id","useEffect","_jsxs","_Fragment","children","Modal","onHide","centered","_jsx","Header","closeButton","Title","Container","className","Row","Form","noValidate","Group","as","Col","controlId","Label","Control","size","type","placeholder","disabled","value","required","name","onChange","inputValue","target","test","handleInputChange","Button","onClick","fluid","style","height","length","map","item","idx","purchaseDate","retailerId","utiId","totalPrice","Badge","status","colSpan","_excluded","React","ref","bsPrefix","_ref$bg","bg","_ref$pill","pill","text","_ref$as","Component","props","_objectWithoutProperties","prefix","useBootstrapPrefix","classNames","displayName"],"sourceRoot":""}