{"version":3,"file":"static/js/915.0ea2837b.chunk.js","mappings":"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","sources":["views/dashboard/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport {\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilPeople } from '@coreui/icons'\nimport axios from 'axios'\nimport { useSelector } from 'react-redux'\n\nconst Dashboard = () => {\n  const [users, setUsers] = useState([])\n  // const [partners , setPartners] = useState([])\n  const user = useSelector((state) => state.user.user)\n\n  \n  const getAllUsers = async () => {\n    try {\n      const res = await axios.get('/api/v1/admin/allUser')\n      if (res.data.success) {\n        const { data } = res.data\n        setUsers(data)\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  // const getCreatedPartners = async () => {  \n  //   try {\n  //     // const uniqueId = user._id;\n  //     const uniqueId = user.uniqueId;\n  //     const res = await axios.get('/api/v1/user/getCreatedPartners',uniqueId)\n  //     if (res.data.success) {\n  //       const { data } = res.data\n  //       setPartners([...data])\n  //     }\n  //   } catch (error) {\n  //     console.log(error)\n  //   }\n  // }\n  useEffect(() => {\n    getAllUsers()\n    // getCreatedPartners()\n  }, [])\n\n  return (\n    <>\n      <CRow className='mb-4'>\n        <CCol xs>\n          <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n            <CTableHead color=\"light\">\n              <CTableRow>\n                <CTableHeaderCell className=\"text-center\">Sn</CTableHeaderCell>\n                <CTableHeaderCell>Date</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Unique Id</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Role </CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Name</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">PAN</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">State</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">City</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Pin Code</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Created By</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Status</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n            {/* {partners.map((item, index) => (\n                <CTableRow v-for=\"item in tableItems\" key={1}>\n                  <CTableDataCell className=\"text-center\">{index +1}</CTableDataCell>\n                  <CTableHeaderCell className=\"text-center\">{item.date ? item.date : \"N/A\"}</CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\">{item._id}</CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\">{item.role}</CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\">{item.name}</CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\">{item.pan}</CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\">{item.state ? item.state : \"N/A\"}</CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\">{item.city ? item.city : \"N/A\"}</CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\">{item.pinCode ? item.pinCode : \"N/A\"}</CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\">{item.createdBy ? item.createdBy : \"N/A\"}</CTableHeaderCell>\n                  <CTableHeaderCell className=\"text-center\">{item.status}</CTableHeaderCell>\n                </CTableRow>\n            ))}               */}\n            </CTableBody>\n          </CTable>\n        </CCol>\n      </CRow>\n      <CRow>\n        <CCol xs>\n          <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n            <CTableHead color=\"light\">\n              <CTableRow>\n                <CTableHeaderCell className=\"text-center\">\n                  <CIcon icon={cilPeople} />\n                </CTableHeaderCell>\n                <CTableHeaderCell>User</CTableHeaderCell>\n                {/* <CTableHeaderCell className=\"text-center\">Country</CTableHeaderCell> */}\n                <CTableHeaderCell className=\"text-center\">Commission</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Partner Created</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Commission Earned</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {users.map((item, index) => (\n                <CTableRow v-for=\"item in tableItems\" key={index}>\n                  <CTableDataCell className=\"text-center\">\n                    <div>{index + 1}</div>\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    <div>{item.name}</div>\n                    <div className=\"small text-medium-emphasis\">\n                      {/* <span>{item.status}</span>  */}\n                      {/* Created By:{ item.createdBy ? item.createdBy.name : 'Admin' } */}\n                      Created By:{item.createdBy ? item.createdBy : 'Owner'}\n                    </div>\n                  </CTableDataCell>\n                  <CTableDataCell className=\"text-center\">\n                    <CIcon size=\"xl\" icon={item.commission} />\n                  </CTableDataCell>\n                  <CTableDataCell className=\"text-center\">\n                    <strong>{item.partners.length}</strong>\n                  </CTableDataCell>\n                  <CTableDataCell className=\"text-center\">\n                    <strong>{item.totalCommissionEarned}</strong>\n                  </CTableDataCell>\n                </CTableRow>\n              ))}\n            </CTableBody>\n          </CTable>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Dashboard\n\n// <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" class=\"icon icon-lg\" role=\"img\"><path fill=\"var(--ci-primary-color, currentColor)\" d=\"M88,160A64,64,0,1,0,24,96,64.072,64.072,0,0,0,88,160Zm0-96A32,32,0,1,1,56,96,32.036,32.036,0,0,1,88,64Z\" class=\"ci-primary\"></path><path fill=\"var(--ci-primary-color, currentColor)\" d=\"M256,32a64,64,0,1,0,64,64A64.072,64.072,0,0,0,256,32Zm0,96a32,32,0,1,1,32-32A32.036,32.036,0,0,1,256,128Z\" class=\"ci-primary\"></path><path fill=\"var(--ci-primary-color, currentColor)\" d=\"M424,160a64,64,0,1,0-64-64A64.072,64.072,0,0,0,424,160Zm0-96a32,32,0,1,1-32,32A32.036,32.036,0,0,1,424,64Z\" class=\"ci-primary\"></path><path fill=\"var(--ci-primary-color, currentColor)\" d=\"M88,192a64,64,0,1,0,64,64A64.072,64.072,0,0,0,88,192Zm0,96a32,32,0,1,1,32-32A32.036,32.036,0,0,1,88,288Z\" class=\"ci-primary\"></path><path fill=\"var(--ci-primary-color, currentColor)\" d=\"M256,192a64,64,0,1,0,64,64A64.072,64.072,0,0,0,256,192Zm0,96a32,32,0,1,1,32-32A32.036,32.036,0,0,1,256,288Z\" class=\"ci-primary\"></path><path fill=\"var(--ci-primary-color, currentColor)\" d=\"M424,192a64,64,0,1,0,64,64A64.072,64.072,0,0,0,424,192Zm0,96a32,32,0,1,1,32-32A32.036,32.036,0,0,1,424,288Z\" class=\"ci-primary\"></path><path fill=\"var(--ci-primary-color, currentColor)\" d=\"M424,352a64,64,0,1,0,64,64A64.072,64.072,0,0,0,424,352Zm0,96a32,32,0,1,1,32-32A32.036,32.036,0,0,1,424,448Z\" class=\"ci-primary\"></path><rect width=\"32\" height=\"32\" x=\"56\" y=\"408\" fill=\"var(--ci-primary-color, currentColor)\" class=\"ci-primary\"></rect><rect width=\"32\" height=\"32\" x=\"152\" y=\"408\" fill=\"var(--ci-primary-color, currentColor)\" class=\"ci-primary\"></rect><rect width=\"32\" height=\"32\" x=\"248\" y=\"408\" fill=\"var(--ci-primary-color, currentColor)\" class=\"ci-primary\"></rect></svg>\n"],"names":["_useState","useState","_useState2","_slicedToArray","users","setUsers","getAllUsers","useSelector","state","user","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","data","wrap","_context","prev","next","axios","get","sent","success","t0","console","log","stop","apply","arguments","useEffect","_jsxs","_Fragment","children","_jsx","CRow","className","CCol","xs","CTable","align","hover","responsive","CTableHead","color","CTableRow","CTableHeaderCell","CTableBody","CIcon","icon","cilPeople","map","item","index","CTableDataCell","name","createdBy","size","commission","partners","length","totalCommissionEarned"],"sourceRoot":""}