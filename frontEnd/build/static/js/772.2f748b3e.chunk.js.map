{"version":3,"file":"static/js/772.2f748b3e.chunk.js","mappings":"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","sources":["views/pendingForPSA/Index.js","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Spinner.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React, {  useState } from 'react'\r\nimport { Badge, Button, Container, Form, Modal, Row, Spinner, Table } from 'react-bootstrap'\r\nimport { message } from 'antd'\r\nimport axios from 'axios'\r\nimport { useEffect } from 'react'\r\n\r\nconst Index = () => {\r\n  const [PSAPendingUsers, setPSAPendingUsers] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n  const [psaID, setPsaID] = useState('')\r\n  const [psaPassword, setPsaPassword] = useState('')\r\n  const [registerCode, setRegisterCode] = useState('')\r\n  const getPSAPendingUsers = async () => {\r\n    try {\r\n      const res = await axios.get('api/v1/masterAdmin/getUserPendingForPsa')\r\n      if (res.data.success) {\r\n        setPSAPendingUsers(res.data.data)\r\n        setLoading(false)\r\n      }else{\r\n        setLoading(false)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      setLoading(false)\r\n    }\r\n  }\r\n  const addPSA = async (id) => {\r\n    try {\r\n      if (!psaID || !psaPassword || !registerCode) return message.error('Please Enter All Fields')\r\n      const data = {\r\n        uniqueId :id,\r\n        psaID,\r\n        psaPassword,\r\n        registerCode\r\n      }\r\n      const res = await axios.post('api/v1/masterAdmin/addPSA', data)\r\n      if (res.data.success) {\r\n        message.success('PSA Added Successfully')\r\n        getPSAPendingUsers()\r\n        handleClose()\r\n        setPsaID('')\r\n        setPsaPassword('')\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPSAPendingUsers()\r\n  }, [])\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <>\r\n          <Container fluid className=\"d-flex justify-content-center align-items-center\">\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n          </Container>\r\n        </>\r\n      ) : (\r\n        <>\r\n          {/* <Row>\r\n            {totalUser} {couponTotal}\r\n          </Row> */}\r\n          <Container fluid>\r\n            <Table responsive className='w-100'>\r\n              <thead>\r\n                <tr>\r\n                  <td className=\"text-center\">\r\n                    <b>Sn</b>\r\n                  </td>\r\n                  <td className=\"text-center\">\r\n                    <b>Name</b>\r\n                  </td>\r\n                  <td className=\"text-center\">\r\n                    <b>Mobile Number</b>\r\n                  </td>\r\n                  <td className=\"text-center\">\r\n                    <b>Unique ID</b>\r\n                  </td>\r\n                  <td className=\"text-center\">\r\n                    <b>PAN No.</b>\r\n                  </td>\r\n                  <td className=\"text-center\">\r\n                    <b>State</b>\r\n                  </td>\r\n                  <td className=\"text-center\">\r\n                    <b>City</b>\r\n                  </td>\r\n                  <td className=\"text-center\">\r\n                    <b>PSA ID</b>\r\n                  </td>{' '}\r\n                  <td className=\"text-center\">\r\n                    <b>Action</b>\r\n                  </td>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {PSAPendingUsers && PSAPendingUsers.length > 0 ? (\r\n                  PSAPendingUsers.map((user, index) => (\r\n                    <>\r\n                      <tr key={index}>\r\n                        <td className=\"text-center\">{index + 1}</td>\r\n                        <td className=\"text-center\">{user.name}</td>\r\n                        <td className=\"text-center\">{user.mobileNumber}</td>\r\n                        <td className=\"text-center\">{user.uniqueId}</td>\r\n                        <td className=\"text-center\">{user.panCard}</td>\r\n                        <td className=\"text-center\">{user.state}</td>\r\n                        <td className=\"text-center\">{user.city}</td>\r\n                        <td className=\"text-center\">\r\n                          {user.psaId ? (\r\n                            <Badge className=\"bg-success\">Made</Badge>\r\n                          ) : (\r\n                            <Badge className=\"bg-warning text-white\">Pending</Badge>\r\n                          )}\r\n                        </td>\r\n                        <td className=\"text-center\">\r\n                          <Button\r\n                            className=\"myCustomBtn\"\r\n                            onClick={() => {\r\n                              handleShow()\r\n                              console.log('clicked')\r\n                            }}\r\n                          >\r\n                            Make PSA\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                      <Modal show={show} onHide={handleClose} animation={false} centered>\r\n                        <Modal.Header closeButton>\r\n                          <Modal.Title>Make PSA for &quot;{user.name}&quot;</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                          <Form noValidate>\r\n                            <Row className=\"mb-3\">\r\n                              <Form.Group className=\"col-12 col-md-6\">\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                  type=\"text\"\r\n                                  placeholder=\"Enter Name\"\r\n                                  value={user.name}\r\n                                  disabled\r\n                                ></Form.Control>\r\n                              </Form.Group>\r\n\r\n                              <Form.Group className=\"col-12 col-md-6\">\r\n                                <Form.Label>Unique ID</Form.Label>\r\n                                <Form.Control\r\n                                  type=\"text\"\r\n                                  placeholder=\"Enter UniqueID\"\r\n                                  value={user.uniqueId}\r\n                                  disabled\r\n                                ></Form.Control>\r\n                              </Form.Group>\r\n                            </Row>\r\n                            <Row className=\"mb-3\">\r\n                              <Form.Group className=\"col-12 col-md-6\">\r\n                                <Form.Label>PSA ID</Form.Label>\r\n                                <Form.Control\r\n                                  type=\"text\"\r\n                                  placeholder=\"Enter PSA ID\"\r\n                                  value={psaID}\r\n                                  onChange={(e) => setPsaID(e.target.value)}\r\n                                ></Form.Control>\r\n                              </Form.Group>\r\n\r\n                              <Form.Group className=\"col-12 col-md-6\">\r\n                                <Form.Label>PSA Password</Form.Label>\r\n                                <Form.Control\r\n                                  type=\"password\"\r\n                                  placeholder=\"Enter PSA Password\"\r\n                                  value={psaPassword}\r\n                                  onChange={(e) => setPsaPassword(e.target.value)}\r\n                                ></Form.Control>\r\n                              </Form.Group>\r\n\r\n                              <Form.Group className=\"col-12 col-md-6\">\r\n                                <Form.Label>Registeration Code</Form.Label>\r\n                                <Form.Control\r\n                                  type=\"text\"\r\n                                  placeholder=\"Enter PSA Register code\"\r\n                                  value={registerCode}\r\n                                  onChange={(e) => setRegisterCode(e.target.value)}\r\n                                ></Form.Control>\r\n                              </Form.Group>\r\n                            </Row>\r\n                          </Form>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                          <Button\r\n                            type=\"submit\"\r\n                            className=\"myCustomBtn\"\r\n                            onClick={() => {\r\n                              addPSA(user.uniqueId)\r\n                            }}\r\n                          >\r\n                            Add PSA\r\n                          </Button>\r\n                        </Modal.Footer>\r\n                      </Modal>\r\n                    </>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan=\"9\" className=\"text-center text-danger\">\r\n                      No Data Found\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n          </Container>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation = 'border',\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["_useState","useState","_useState2","_slicedToArray","PSAPendingUsers","setPSAPendingUsers","_useState3","_useState4","loading","setLoading","_useState5","_useState6","show","setShow","handleClose","_useState7","_useState8","psaID","setPsaID","_useState9","_useState10","psaPassword","setPsaPassword","_useState11","_useState12","registerCode","setRegisterCode","getPSAPendingUsers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","success","t0","console","log","stop","apply","arguments","addPSA","_ref2","_callee2","id","_context2","abrupt","message","error","uniqueId","post","_x","useEffect","_jsx","_Fragment","children","Container","fluid","className","Spinner","animation","role","_jsxs","Table","responsive","length","map","user","index","name","mobileNumber","panCard","state","city","psaId","Badge","Button","onClick","Modal","onHide","centered","Header","closeButton","Title","Body","Form","noValidate","Row","Group","Label","Control","type","placeholder","value","disabled","onChange","e","target","Footer","colSpan","_excluded","React","ref","bsPrefix","_ref$bg","bg","_ref$pill","pill","text","_ref$as","as","Component","props","_objectWithoutProperties","prefix","useBootstrapPrefix","_objectSpread","classNames","concat","displayName","decoratedBsPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","variant","_ref$animation","size","bsSpinnerPrefix","striped","bordered","borderless","hover","table","responsiveClass"],"sourceRoot":""}