{"version":3,"file":"static/js/21.3ec709ab.chunk.js","mappings":"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","sources":["views/approveUser/Index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Button, Container } from 'react-bootstrap'\nimport { message } from 'antd'\nimport axois from 'axios'\nimport {\n  CRow,\n  CCol,\n  CTable,\n  CTableHead,\n  CTableBody,\n  CTableHeaderCell,\n  CTableRow,\n  CTableDataCell,\n} from '@coreui/react'\nconst Index = () => {\n  console.log('rendering approve user page')\n  const [approvalReqUser, setApprovalReqUser] = useState([])\n\n  const findUserForApproval = async () => {\n    try {\n      const res = await axois.get('/api/v1/masterAdmin/getUserForApproval')\n      if (res.data.success) {\n        if(res.data.data.length === 0){\n          setApprovalReqUser(null)\n        }else{\n          setApprovalReqUser(res.data.data)\n        }\n      }\n      \n    } catch (error) {\n      console.log(error)\n      message.error('Something went wrong')\n    }\n  }\n  useEffect(() => {\n    findUserForApproval()\n  }, [])\n  const approveUser = async (uniqueId) => {\n    try {\n      const res = await axois.patch('/api/v1/masterAdmin/approveUser',{uniqueId})\n      if (res.data.success) {\n        message.success(res.data.message)\n        findUserForApproval()\n      } else {\n        message.error(res.data.message)\n      }\n    } catch (error) {\n      console.log(error)\n      message.error('Something went wrong')\n    }\n  }\n\n  return (\n    <Container fluid>\n      <CRow className=\"mb-4\">\n        <CCol xs>\n          <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n            <CTableHead color=\"light\">\n              <CTableRow>\n                <CTableHeaderCell className=\"text-center\">#</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Transaction Id</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Paid</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Unique Id</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Role </CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Name</CTableHeaderCell>\n                <CTableDataCell className=\"text-center\" colSpan={2}>\n                  Action\n                </CTableDataCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {approvalReqUser &&\n                approvalReqUser.map((user, index) => (\n                  <CTableRow v-for=\"item in tableItems\" key={index + 1}>\n                    <CTableDataCell className=\"text-center\">{index + 1}</CTableDataCell>\n                    <CTableDataCell className=\"text-center\">{user.transactionId}</CTableDataCell>\n                    <CTableDataCell className=\"text-center\">{user.paid ? \"Paid\" : \"False\"}</CTableDataCell>\n                    <CTableDataCell className=\"text-center\">{user.uniqueId}</CTableDataCell>\n                    <CTableDataCell className=\"text-center\">{user.role}</CTableDataCell>\n                    <CTableDataCell className=\"text-center\">{user.name}</CTableDataCell>\n                    <CTableDataCell className=\"text-center\">\n                      <Button className=\"btn-danger\">Reject</Button>\n                    </CTableDataCell>\n                    <CTableDataCell className=\"text-center\">\n                      <Button className=\"btn-primary\" onClick={() => approveUser(user.uniqueId)}>\n                        Approve\n                      </Button>\n                    </CTableDataCell>\n                  </CTableRow>\n                ))}\n            </CTableBody>\n          </CTable>\n        </CCol>\n      </CRow>\n    </Container>\n  )\n}\n\nexport default Index\n"],"names":["console","log","_useState","useState","_useState2","_slicedToArray","approvalReqUser","setApprovalReqUser","findUserForApproval","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axois","get","sent","data","success","length","t0","message","error","stop","apply","arguments","useEffect","approveUser","_ref2","_callee2","uniqueId","_context2","patch","_x","_jsx","Container","fluid","children","CRow","className","CCol","xs","_jsxs","CTable","align","hover","responsive","CTableHead","color","CTableRow","CTableHeaderCell","CTableDataCell","colSpan","CTableBody","map","user","index","transactionId","paid","role","name","Button","onClick"],"sourceRoot":""}