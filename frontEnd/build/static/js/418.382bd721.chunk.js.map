{"version":3,"file":"static/js/418.382bd721.chunk.js","mappings":"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","sources":["views/greetings/Greetings.js","views/retailer-dashboard/Index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ReactTyped from 'react-typed'\r\n\r\nconst Greetings = ({ user }) => {\r\n  const [greeting, setGreeting] = useState('')\r\n  \r\n  function getGreeting() {\r\n    const date = new Date()\r\n    const hour = date.getHours()\r\n    if (hour < 12) return setGreeting('Good Morning')\r\n    if (hour < 18) return setGreeting('Good Afternoon')\r\n    return setGreeting('Good Evening')\r\n  }\r\n  useEffect(() => {\r\n    getGreeting()\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <h5>\r\n        Hello, {user.name} <ReactTyped strings={[greeting]} typeSpeed={200} loop />{' '}\r\n      </h5>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Greetings\r\nGreetings.propTypes = {\r\n  user: PropTypes.object,\r\n}\r\n","import React, { useState } from 'react'\nimport { Card, Container, Spinner } from 'react-bootstrap'\nimport { useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport { Form, Input } from 'antd'\nimport { Button } from 'react-bootstrap'\nimport qrCode from '../../assets/qrcodes/qrCode.png'\nimport Greetings from '../greetings/Greetings'\nimport CIcon from '@coreui/icons-react'\nimport { cilWallet } from '@coreui/icons'\n\nconst Index = () => {\n  const user = useSelector((state) => state.user.user)\n  const navigate = useNavigate()\n  const [loading, setLoading] = useState(false)\n\n  if (!user) return navigate('/')\n\n  const onFinish = (values) => {\n    console.log('Success:', values)\n  }\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo)\n  }\n\n  return (\n    <>\n      {loading ? (\n        <>\n          <Container fluid className=\"d-flex justify-content-center align-items-center\">\n            <Spinner animation=\"border\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </Spinner>\n          </Container>\n        </>\n      ) : (\n        <>\n          <Container>\n            <Greetings user={user} />\n          </Container>\n          <Container\n            fluid\n            className=\"d-flex flex-column-reverse flex-md-row justify-content-center \"\n            style={{\n              minHeight: '70vh',\n              width: '100%',\n            }}\n          >\n            <div className=\"d-flex justify-content-center flex-column\">\n              <div className=\"d-flex flex-column flex-md-row \">\n                <Card className=\"card border-1 rounded-4 border-dark \">\n                  <Card.Header className=\"text-center bg-white rounded-top-4 border-dark border-1\">\n                    <h5>UTI LOGIN DETAILS</h5>\n                  </Card.Header>\n                  <Card.Body>\n                    <Form\n                      initialValues={{\n                        remember: true,\n                      }}\n                      onFinish={onFinish}\n                      onFinishFailed={onFinishFailed}\n                      autoComplete=\"off\"\n                    >\n                      <Form.Item\n                        name=\"utiID\"\n                        rules={[\n                          {\n                            required: true,\n                            message: 'Please input your username!',\n                          },\n                        ]}\n                      >\n                        <span className=\"text-center d-flex align-items-center justify-content-center\">\n                          UTI ID\n                        </span>\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        name=\"utiPassword\"\n                        rules={[\n                          {\n                            required: true,\n                            message: 'Please input your password!',\n                          },\n                        ]}\n                      >\n                        <span className=\"text-center d-flex align-items-center justify-content-center\">\n                          UTI Password\n                        </span>\n                        <Input.Password />\n                      </Form.Item>\n                      <Container fluid className=\"d-flex align-items-center justify-content-center\">\n                        <Button className=\"myCustomBtn d-flex align-items-center justify-content-center\">\n                          Login Link\n                        </Button>\n                      </Container>\n                    </Form>\n                  </Card.Body>\n                </Card>\n\n                <div className=\"mx-4 my-2 my-md-0\">\n                  <img\n                    src={qrCode}\n                    style={{\n                      height: '22rem',\n                      objectFit: 'contain',\n                    }}\n                    alt=\"qrcode\"\n                  />\n                </div>\n\n               \n              </div>\n            </div>\n            <div className='d-flex flex-column align-items-center '>\n              <div\n                className=\"bg-white mb-2 \"\n                style={{\n                  border: '1px solid rgb(65, 117, 252)',\n                  borderStyle: 'dotted',\n                  marginLeft: '6rem',\n                  borderRadius: '10px',\n                  padding: '.7rem',\n                  color: 'rgb(65, 117, 252)',\n                }}\n              >\n                <CIcon className=\"\" icon={cilWallet} /> Balance : â‚¹{user && user.walletBalance}\n              </div>\n            </div>\n          </Container>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default Index\n"],"names":["_ref","user","_useState","useState","_useState2","_slicedToArray","greeting","setGreeting","useEffect","hour","Date","getHours","getGreeting","_jsx","children","_jsxs","name","ReactTyped","strings","typeSpeed","loop","useSelector","state","navigate","useNavigate","loading","_Fragment","Container","fluid","className","Spinner","animation","role","Greetings","style","minHeight","width","Card","Header","Body","Form","initialValues","remember","onFinish","values","console","log","onFinishFailed","errorInfo","autoComplete","Item","rules","required","message","Input","Password","Button","src","qrCode","height","objectFit","alt","border","borderStyle","marginLeft","borderRadius","padding","color","CIcon","icon","cilWallet","walletBalance"],"sourceRoot":""}