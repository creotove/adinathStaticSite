{"version":3,"file":"static/js/7681.f02f458e.chunk.js","mappings":"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","sources":["views/add-employee/Index.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react'\r\n\r\nimport {\r\n  CButton,\r\n  CCol,\r\n  CContainer,\r\n  CModal,\r\n  CModalBody,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap'\r\nimport { message } from 'antd'\r\nimport axios from 'axios'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Index = () => {\r\n  const user = useSelector((state) => state.user.user)\r\n\r\n  const [perms, setPerms] = useState('')\r\n  const [employees, setEmployees] = useState([])\r\n\r\n  const [visible, setVisible] = useState(false)\r\n  const [name, setname] = useState('')\r\n  const [mobileNumber, setMobileNumber] = useState('')\r\n  const [uniqueId, setUniqueId] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [cnfrmPassword, setCnfrmPassword] = useState('')\r\n  const [validated, setValidated] = useState(false)\r\n\r\n\r\n  const handleNameUnique = (e) => {\r\n    const lastSixDigit = mobileNumber.slice(-6)\r\n    setUniqueId(`EMP-${lastSixDigit}`)\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    try {\r\n      const form = e.currentTarget\r\n      if (form.checkValidity() === false) {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        if (password !== cnfrmPassword) {\r\n          message.error('Password and Confirm Password does not match')\r\n        }\r\n        setValidated(true)\r\n        return\r\n      }\r\n      if (password !== cnfrmPassword) {\r\n        return message.error('Password field does not match')\r\n      }\r\n      e.preventDefault()\r\n      e.stopPropagation()\r\n      const formData = {\r\n        name,\r\n        mobileNumber,\r\n        perms,\r\n        uniqueId,\r\n        password,\r\n        createdBy: user._id,\r\n      }\r\n      console.log(formData)\r\n\r\n      const res = await axios.post('/api/v1/masterAdmin/add-employee', formData)\r\n      if (res.data.success) {\r\n        setname('')\r\n        setMobileNumber('')\r\n        setUniqueId('')\r\n        setPassword('')\r\n        setCnfrmPassword('')\r\n        message.success('Partner Added successfull')\r\n        getMyEmployees()\r\n        setVisible(false)\r\n      } else {\r\n        message.error(res.data.message)\r\n      }\r\n    } catch (error) {\r\n      message.error('Error in adding Partner')\r\n      console.log(error)\r\n    }\r\n    e.preventDefault()\r\n  }\r\n\r\n  const getMyEmployees = useCallback(async () => {\r\n    try {\r\n      if (user) {\r\n        const res = await axios.get('/api/v1/masterAdmin/get-employee')\r\n        if (res.data.success) {\r\n          setEmployees(res.data.data)\r\n        }\r\n      }\r\n    } catch (error) {\r\n      message.error('Error in getting employees')\r\n      console.log(error)\r\n    }\r\n  }, [user])\r\n\r\n  useEffect(() => {\r\n    getMyEmployees()\r\n  }, [getMyEmployees])\r\n  return (\r\n    <>\r\n      <CContainer fluid className=\"d-flex justify-content-end\">\r\n        <CButton onClick={() => setVisible(!visible)} className=\"mb-3 myCustomBtn\">\r\n          Create Employee\r\n        </CButton>\r\n        <CModal\r\n          size=\"md\"\r\n          visible={visible}\r\n          onClose={() => setVisible(false)}\r\n          aria-labelledby=\"OptionalSizesExample2\"\r\n        >\r\n          <CModalHeader>\r\n            <CModalTitle id=\"CreatePartnerModal\">Create Partner</CModalTitle>\r\n          </CModalHeader>\r\n          <CModalBody>\r\n            <div className=\"container justify-content-center d-flex mt-5 w-100 \">\r\n              <Form noValidate validated={validated} onSubmit={handleSubmit} autoComplete=\"off\">\r\n                <Row className=\"mb-3\">\r\n                  <Form.Group as={Col} className=\"col-12 col-md-6\" controlId=\"formName\">\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Enter Name\"\r\n                      onChange={(e) => {\r\n                        setname(e.target.value)\r\n                      }}\r\n                      value={name}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Col} className=\"col-12 col-md-6\" controlId=\"formMobileNumber\">\r\n                    <Form.Label>WhatsApp Number</Form.Label>\r\n                    <Form.Control\r\n                      type=\"number\"\r\n                      placeholder=\"Enter Mobile Number\"\r\n                      onChange={(e) => setMobileNumber(e.target.value)}\r\n                      value={mobileNumber}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </Row>\r\n\r\n                <Row className=\"mb-3\">\r\n                  <Form.Group as={Col} className=\"col-12 col-md-6\" controlId=\"UniqueId\">\r\n                    <Form.Label>Unique Id</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      className=\"disabled\"\r\n                      placeholder=\"Unique Id\"\r\n                      onChange={(e) => handleNameUnique(e)}\r\n                      value={uniqueId}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group className=\"col-12 col-md-6\">\r\n                    <Form.Label>Permissions</Form.Label>\r\n                    <Form.Select\r\n                      onChange={(e) => {\r\n                        setPerms(e.target.value)\r\n                      }}\r\n                      defaultValue={'allAccess'}\r\n                      value={perms}\r\n                      required\r\n                    >\r\n                      <option value=\"Select Role\" disabled>\r\n                        Select Permissions\r\n                      </option>\r\n                      <option value=\"allAccess\">All Access</option>\r\n                      <option value=\"isWalletApprover\">Wallet Add Approver</option>\r\n                      <option value=\"isCouponApprover\">Coupon Purchase Approver</option>\r\n                    </Form.Select>\r\n                  </Form.Group>\r\n                </Row>\r\n                <Row className=\"mb-3\">\r\n                  <Form.Group as={Col} className=\"col-12 col-md-6\" controlId=\"formPassword\">\r\n                    <Form.Label>Password </Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Enter Password\"\r\n                      onChange={(e) => setPassword(e.target.value)}\r\n                      value={password}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} className=\"col-12 col-md-6\" controlId=\"formCnfrmPassword\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                      type=\"password\"\r\n                      placeholder=\"Re-enter Password\"\r\n                      onChange={(e) => setCnfrmPassword(e.target.value)}\r\n                      value={cnfrmPassword}\r\n                      required\r\n                    />\r\n                  </Form.Group>\r\n                </Row>\r\n\r\n                <Button\r\n                  className=\"col-3 col-sm-12 col-lg-3 col-xs-12 col-md-3 col-12 offset-md-9 myCustomBtn\"\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n          </CModalBody>\r\n        </CModal>\r\n      </CContainer>\r\n      <CContainer fluid>\r\n        <CRow>\r\n          <CCol xs>\r\n            <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\r\n              <CTableHead color=\"light\">\r\n                <CTableRow>\r\n                  <CTableHeaderCell className=\"text-center\">\r\n                    <b>Sn</b>\r\n                  </CTableHeaderCell>\r\n                  <CTableHeaderCell className=\"text-center\">\r\n                    <b>Added On.</b>\r\n                  </CTableHeaderCell>\r\n                  <CTableHeaderCell className=\"text-center\">\r\n                    <b>Name</b>\r\n                  </CTableHeaderCell>\r\n                  <CTableHeaderCell className=\"text-center\">\r\n                    <b>Mobile Number</b>\r\n                  </CTableHeaderCell>\r\n                  <CTableHeaderCell className=\"text-center\">\r\n                    <b>Permissions</b>\r\n                  </CTableHeaderCell>\r\n                  <CTableHeaderCell className=\"text-center\">\r\n                    <b>Status</b>\r\n                  </CTableHeaderCell>\r\n                </CTableRow>\r\n              </CTableHead>\r\n              <CTableBody>\r\n                {employees && employees.length > 0 ? (\r\n                  employees.map((item, index) => (\r\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\r\n                      <CTableDataCell className=\"text-center\">\r\n                        <strong>{index + 1}</strong>\r\n                      </CTableDataCell>\r\n                      <CTableDataCell className=\"text-center\">\r\n                        {new Date(user.createdAt).toLocaleDateString()}\r\n                      </CTableDataCell>\r\n                      <CTableDataCell className=\"text-center\">{item.name}</CTableDataCell>\r\n                      <CTableDataCell className=\"text-center\">{item.mobileNumber}</CTableDataCell>\r\n                      <CTableDataCell className=\"text-center\">\r\n                        {item.perms === 'allAccess'\r\n                          ? 'All Access'\r\n                          : item.perms === 'isWalletApprover'\r\n                          ? 'Wallet Add Approver'\r\n                          : item.perms === 'isCouponApprover'\r\n                          ? 'Coupon Purchase Approver'\r\n                          : ''}\r\n                      </CTableDataCell>\r\n                      <CTableDataCell className=\"text-center\">{item.mobileNumber}</CTableDataCell>\r\n                    </CTableRow>\r\n                  ))\r\n                ) : (\r\n                  <CTableRow v-for=\"item in tableItems\">\r\n                    <CTableDataCell className=\"text-center\" colSpan={9}>\r\n                      No employees Found\r\n                    </CTableDataCell>\r\n                  </CTableRow>\r\n                )}\r\n\r\n                {/* {tableExample.map((item, index) => (\r\n                <CTableRow v-for=\"item in tableItems\" key={index}>\r\n                  <CTableDataCell className=\"text-center\">\r\n                    <strong>{index + 1}</strong>\r\n                  </CTableDataCell>\r\n                  <CTableDataCell className=\"text-center\">\r\n                    <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status} />\r\n                  </CTableDataCell>\r\n                  <CTableDataCell>\r\n                    <div>{item.user.name}</div>\r\n                    <div className=\"small text-medium-emphasis\">\r\n                      <span>{item.user.new ? 'Aprroved' : 'Pending'}</span> | Registered:{' '}\r\n                    </div>\r\n                  </CTableDataCell>\r\n                  <CTableDataCell className=\"text-center\">\r\n                    <CIcon size=\"xl\" icon={item.payment.icon} />\r\n                  </CTableDataCell>\r\n                  <CTableDataCell className=\"text-center\">\r\n                    <strong>{item.usage.value}</strong>\r\n                  </CTableDataCell>\r\n                  <CTableDataCell>\r\n                    <div className=\"small text-medium-emphasis\">Last login</div>\r\n                    <strong>{item.activity}</strong>\r\n                  </CTableDataCell>\r\n                </CTableRow>\r\n              ))} */}\r\n              </CTableBody>\r\n            </CTable>\r\n          </CCol>\r\n        </CRow>\r\n      </CContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["user","useSelector","state","_useState","useState","_useState2","_slicedToArray","perms","setPerms","_useState3","_useState4","employees","setEmployees","_useState5","_useState6","visible","setVisible","_useState7","_useState8","name","setname","_useState9","_useState10","mobileNumber","setMobileNumber","_useState11","_useState12","uniqueId","setUniqueId","_useState13","_useState14","password","setPassword","_useState15","_useState16","cnfrmPassword","setCnfrmPassword","_useState17","_useState18","validated","setValidated","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","formData","res","wrap","_context","prev","next","currentTarget","checkValidity","preventDefault","stopPropagation","message","error","abrupt","createdBy","_id","console","log","axios","post","sent","data","success","getMyEmployees","t0","stop","_x","apply","arguments","useCallback","_callee2","_context2","get","useEffect","_jsxs","_Fragment","children","CContainer","fluid","className","_jsx","CButton","onClick","CModal","size","onClose","CModalHeader","CModalTitle","id","CModalBody","Form","noValidate","onSubmit","autoComplete","Row","Group","as","Col","controlId","Label","Control","type","placeholder","onChange","target","value","required","lastSixDigit","slice","concat","handleNameUnique","Select","defaultValue","disabled","Button","CRow","CCol","xs","CTable","align","hover","responsive","CTableHead","color","CTableRow","CTableHeaderCell","CTableBody","length","map","item","index","CTableDataCell","Date","createdAt","toLocaleDateString","colSpan","_excluded","React","ref","bsPrefix","_ref$as","Component","props","_objectWithoutProperties","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","_objectSpread","classNames","displayName"],"sourceRoot":""}