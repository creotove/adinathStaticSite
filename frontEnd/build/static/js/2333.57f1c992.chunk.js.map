{"version":3,"file":"static/js/2333.57f1c992.chunk.js","mappings":"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","sources":["views/master-admin/role-change-request/RoleChangeRequest.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Button, Container, Row, Table } from 'react-bootstrap'\r\nimport { message } from 'antd'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\nconst RoleChangeRequest = (page) => {\r\n  const [roleChangeRequest, setRoleChangeRequest] = useState([])\r\n  const limit = 15\r\n  const [pageCount, setPageCount] = useState(1)\r\n  const currentPage = useRef(1)\r\n  const getRoleChangeRequests = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        `api/v1/masterAdmin/getRoleChangeRequests?page=${currentPage.current}&limit=${limit}`,\r\n      )\r\n      if (res.data.success) {\r\n        const data = res.data.data\r\n        if (data.results.length === 0) {\r\n          setRoleChangeRequest([])\r\n        } else {\r\n          console.log(data.results)\r\n          setRoleChangeRequest(data.results)\r\n          setPageCount(data.totalPages) // Use total pages from the response\r\n        }\r\n      }\r\n    } catch (err) {\r\n      message.success(err.response.data.message)\r\n    }\r\n  }\r\n\r\n  const handlePageClick = (e) => {\r\n    const selectedPage = e.selected + 1\r\n    currentPage.current = selectedPage\r\n    getRoleChangeRequests(selectedPage) // Fetch data for the selected page\r\n  }\r\n  useEffect(() => {\r\n    currentPage.current = 1\r\n    getRoleChangeRequests() // Fetch data for the selected page\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Container>\r\n          <h1>Role Change Request</h1>\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className='text-center'>Sn</th>\r\n                <th className='text-center'>Requested By</th>\r\n                <th className='text-center'>Role</th>\r\n                <th className='text-center'>Transaction Id</th>\r\n                <th className='text-center'>Amount</th>\r\n                <th className='text-center'>Status</th>\r\n                <th className='text-center'>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {roleChangeRequest && roleChangeRequest.length > 0 ? (\r\n              roleChangeRequest.map((item, index) => (\r\n                    <tr key={index}>\r\n                      <td className=\"text-center\">{index + 1}</td>\r\n                      <td className=\"text-center\">{item.uniqueId}</td>\r\n                      <td className=\"text-center\">{item.role}</td>\r\n                      <td className=\"text-center\">{item.transactionId}</td>\r\n                      <td className=\"text-center\">{item.status}</td>\r\n                      <td className=\"text-center\">{item.amount}</td>\r\n                      <td className=\"text-center\">this section is remaining ðŸ™‚</td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan={6} className=\"text-center text-danger\">\r\n                      No data found\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n      </Row>\r\n      <Row>\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\"next >\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"< previous\"\r\n          renderOnZeroPageCount={null}\r\n          marginPagesDisplayed={2}\r\n          containerClassName=\"pagination justify-content-center\"\r\n          pageClassName=\"page-item\"\r\n          pageLinkClassName=\"page-link\"\r\n          previousClassName=\"page-item\"\r\n          previousLinkClassName=\"page-link\"\r\n          nextClassName=\"page-item\"\r\n          nextLinkClassName=\"page-link\"\r\n          activeClassName=\"active\"\r\n        />\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RoleChangeRequest\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["page","_useState","useState","_useState2","_slicedToArray","roleChangeRequest","setRoleChangeRequest","_useState3","_useState4","pageCount","setPageCount","currentPage","useRef","getRoleChangeRequests","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","data","wrap","_context","prev","next","axios","get","concat","current","sent","success","results","length","console","log","totalPages","t0","message","response","stop","apply","arguments","useEffect","_jsxs","_Fragment","children","_jsx","Row","className","Container","Table","responsive","map","item","index","uniqueId","role","transactionId","status","amount","colSpan","ReactPaginate","breakLabel","nextLabel","onPageChange","e","selectedPage","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","marginPagesDisplayed","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","activeClassName","_excluded","React","ref","bsPrefix","striped","bordered","borderless","hover","size","variant","props","_objectWithoutProperties","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_objectSpread","responsiveClass"],"sourceRoot":""}