{"version":3,"file":"static/js/112.99265c2c.chunk.js","mappings":"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","sources":["views/master-admin/AddWithdrawalReq.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Badge, Button, Card, Container, Form, Modal, Row, Table } from 'react-bootstrap'\r\nimport { message } from 'antd'\r\n\r\nconst AddWithdrawalReq = () => {\r\n  const [walletWithdrawalRequest, setWalletWithdrawalRequest] = useState([])\r\n  const [show, setShow] = useState(false)\r\n  const [modalId, setModalId] = useState('')\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => {\r\n    setShow(true)\r\n  }\r\n  const getWalletWithdrawalRequest = async () => {\r\n    try {\r\n      const res = await axios.get('/api/v1/masterAdmin/getWalletWithdrawalRequest')\r\n      if (res.data.success) {\r\n        setWalletWithdrawalRequest(res.data.data)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  const handleApprove = async (id) => {\r\n    try {\r\n      const data = { transactionId: modalId }\r\n      const res = await axios.patch(`/api/v1/masterAdmin/approveWalletWithdrawalRequest/${id}`,data)\r\n      if (res.data.success) {\r\n        getWalletWithdrawalRequest()\r\n        handleClose()\r\n        message.success('Wallet withdrawal request approved successfully')\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  const handleReject = async (id) => {\r\n    try {\r\n      const res = await axios.patch(`/api/v1/masterAdmin/rejectWalletWithdrawalRequest/${id}`)\r\n      if (res.data.success) {\r\n        getWalletWithdrawalRequest()\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getWalletWithdrawalRequest()\r\n  }, [])\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose} animation={false}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Approve Wallet Withrawal</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Enter Transaction ID</Form.Label>\r\n              <Form.Control type=\"text\" placeholder=\"Enter Transaction Id\" />\r\n              <Button className=\"myCustomBtn mt-3\" onClick={() => handleApprove(modalId)}>\r\n                Approve\r\n              </Button>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      <Container fluid>\r\n          <h3>Wallet withdrawal request</h3>\r\n          <Row>\r\n            <Table responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"text-center\">Sn</th>\r\n                  <th className=\"text-center\">Date</th>\r\n                  <th className=\"text-center\">Name</th>\r\n                  <th className=\"text-center\">UniqueId</th>\r\n                  <th className=\"text-center\">Amount</th>\r\n                  <th className=\"text-center\">Bank Name</th>\r\n                  <th className=\"text-center\">IFSC Code</th>\r\n                  <th className=\"text-center\" colSpan={2}>\r\n                    Action\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {walletWithdrawalRequest && walletWithdrawalRequest.length > 0 ? (\r\n                  walletWithdrawalRequest.map((item, index) => (\r\n                    <tr key={index}>\r\n                      <td className=\"text-center\">{index + 1}</td>\r\n                      <td className=\"text-center\">{new Date(item.date).toLocaleDateString()}</td>\r\n                      <td className=\"text-center\">{item.userId.name}</td>\r\n                      <td className=\"text-center\">{item.userId.uniqueId}</td>\r\n                      <td className=\"text-center\">{item.amount}</td>\r\n                      <td className=\"text-center\">{item.bankName.split(' ')[0]}</td>\r\n                      <td className=\"text-center\">{item.bankName.split(' ')[1]}</td>\r\n                      <td className=\"text-center\">\r\n                        <Button\r\n                          className=\"bg-success border-0\"\r\n                          onClick={() => {\r\n                            handleShow()\r\n                            setModalId(item._id)\r\n                          }}\r\n                        >\r\n                          Approve\r\n                        </Button>\r\n                      </td>\r\n                      <td>\r\n                        <Button\r\n                          style={{\r\n                            backgroundColor: 'red',\r\n                            color: 'white',\r\n                            border: 'none',\r\n                          }}\r\n                          onClick={() => {\r\n                            handleReject(item._id)\r\n                          }}\r\n                        >\r\n                          Reject\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan={9} className=\"text-center text-danger\">\r\n                      No data found\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n          </Row>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddWithdrawalReq\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["_useState","useState","_useState2","_slicedToArray","walletWithdrawalRequest","setWalletWithdrawalRequest","_useState3","_useState4","show","setShow","_useState5","_useState6","modalId","setModalId","handleClose","getWalletWithdrawalRequest","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","success","t0","console","log","stop","apply","arguments","handleApprove","_ref2","_callee2","id","_context2","transactionId","patch","concat","message","_x","handleReject","_ref3","_callee3","_context3","_x2","useEffect","_jsxs","_Fragment","children","Modal","onHide","animation","_jsx","Header","closeButton","Title","Body","Form","Group","className","controlId","Label","Control","type","placeholder","Button","onClick","Container","fluid","Row","Table","responsive","colSpan","length","map","item","index","Date","date","toLocaleDateString","userId","name","uniqueId","amount","bankName","split","_id","style","backgroundColor","color","border","_excluded","React","ref","bsPrefix","striped","bordered","borderless","hover","size","variant","props","_objectWithoutProperties","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_objectSpread","responsiveClass"],"sourceRoot":""}