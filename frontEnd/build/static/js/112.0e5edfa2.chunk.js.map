{"version":3,"file":"static/js/112.0e5edfa2.chunk.js","mappings":"8TAmMA,UA7LyB,WACvB,IAAAA,GAA8DC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnEI,EAAuBF,EAAA,GAAEG,EAA0BH,EAAA,GAC1DI,GAAwBL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA0CT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEtCG,GAAkCb,EAAAA,EAAAA,UAAS,GAAEc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAtCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxBG,GAAcC,EAAAA,EAAAA,QAAO,GAErBC,EAAc,WAAH,OAASX,GAAQ,EAAM,EAKlCY,EAAgB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAI,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEdC,EAAAA,EAAMC,IAAI,uDAADC,OAC8BlB,EAAYmB,QAAO,WAAAD,OAZlE,IAaT,QAFKR,EAAGG,EAAAO,MAGDT,KAAKU,UAEiB,KADtBV,EAAOD,EAAIC,KAAKA,MACbW,QAAQC,OACfpC,EAA2B,KAE3BA,EAA2BwB,EAAKW,SAChCvB,EAAaY,EAAKa,cAErBX,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAY,GAAAZ,EAAA,SAEDa,QAAQC,IAAGd,EAAAY,IACXG,EAAAA,GAAQC,MAAM,wBAAuB,yBAAAhB,EAAAiB,OAAA,GAAAtB,EAAA,kBAExC,gBAlBqBuB,GAAA,OAAA3B,EAAA4B,MAAA,KAAAC,UAAA,MAyBtBC,EAAAA,EAAAA,YAAU,WACRlC,EAAYmB,QAAU,EACtBhB,GACF,GAAG,IAEH,IAAMgC,EAAa,eAAAC,GAAA/B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA8B,EAAOC,GAAE,IAAA3B,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,OAEG,OAFHwB,EAAAzB,KAAA,EAErBH,EAAO,CAAEjB,cAAAA,GAAe6C,EAAAxB,KAAA,EACZC,EAAAA,EAAMwB,MAAM,sDAADtB,OAC2BoB,GACtD3B,GACD,OAHQ4B,EAAAnB,KAIDT,KAAKU,UACXlB,IACAD,IACA0B,EAAAA,GAAQP,QAAQ,oDACjBkB,EAAAxB,KAAA,gBAAAwB,EAAAzB,KAAA,EAAAyB,EAAAd,GAAAc,EAAA,SAEDb,QAAQC,IAAGY,EAAAd,IAAO,yBAAAc,EAAAT,OAAA,GAAAO,EAAA,kBAErB,gBAfkBI,GAAA,OAAAL,EAAAJ,MAAA,KAAAC,UAAA,KAgBbS,EAAY,eAAAC,GAAAtC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAqC,EAAON,GAAE,OAAAhC,EAAAA,EAAAA,KAAAM,MAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA/B,KAAA,EAAA+B,EAAA9B,KAAA,EAERC,EAAAA,EAAMwB,MAAM,qDAADtB,OAAsDoB,IAAK,OAA/EO,EAAAzB,KACDT,KAAKU,SACXlB,IACD0C,EAAA9B,KAAA,gBAAA8B,EAAA/B,KAAA,EAAA+B,EAAApB,GAAAoB,EAAA,SAEDnB,QAAQC,IAAGkB,EAAApB,IAAO,yBAAAoB,EAAAf,OAAA,GAAAc,EAAA,kBAErB,gBATiBE,GAAA,OAAAH,EAAAX,MAAA,KAAAC,UAAA,KAWlB,OACEc,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,UAAU,OAAMH,UACnBF,EAAAA,EAAAA,MAACM,EAAAA,EAAS,CAACC,OAAK,EAAAL,SAAA,EACdC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+BACJC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAF,UACFF,EAAAA,EAAAA,MAACQ,EAAAA,EAAK,CAACC,YAAU,EAAAP,SAAA,EACfC,EAAAA,EAAAA,KAAA,SAAAD,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,cAAaH,SAAC,QAC5BC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,cAAaH,SAAC,UAC5BC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,cAAaH,SAAC,UAC5BC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,cAAaH,SAAC,cAC5BC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,cAAaH,SAAC,YAC5BC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,cAAaH,SAAC,eAC5BC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,cAAaH,SAAC,eAC5BC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,cAAcK,QAAS,EAAER,SAAC,iBAK5CC,EAAAA,EAAAA,KAAA,SAAAD,SACG/D,GAA2BA,EAAwBqC,OAAS,EAC3DrC,EAAwBwE,KAAI,SAACC,EAAMC,GAAK,OACtCb,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIE,UAAU,cAAaH,SAAEW,EAAQ,KACrCV,EAAAA,EAAAA,KAAA,MAAIE,UAAU,cAAaH,SAAE,IAAIY,KAAKF,EAAKG,MAAMC,wBACjDb,EAAAA,EAAAA,KAAA,MAAIE,UAAU,cAAaH,SAAEU,EAAKK,OAAOC,QACzCf,EAAAA,EAAAA,KAAA,MAAIE,UAAU,cAAaH,SAAEU,EAAKK,OAAOE,YACzChB,EAAAA,EAAAA,KAAA,MAAIE,UAAU,cAAaH,SAAEU,EAAKQ,UAClCjB,EAAAA,EAAAA,KAAA,MAAIE,UAAU,cAAaH,SAAEU,EAAKS,SAASC,MAAM,KAAK,MACtDnB,EAAAA,EAAAA,KAAA,MAAIE,UAAU,cAAaH,SAAEU,EAAKS,SAASC,MAAM,KAAK,MACtDtB,EAAAA,EAAAA,MAAA,MAAIK,UAAU,cAAaH,SAAA,EACzBC,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CACLlB,UAAU,sBACVmB,QAAS,WA/F/BhF,GAAQ,EAiGc,EAAE0D,SACH,aAGDF,EAAAA,EAAAA,MAACyB,EAAAA,EAAK,CAAClF,KAAMA,EAAMmF,OAAQvE,EAAawE,WAAW,EAAMzB,SAAA,EACvDC,EAAAA,EAAAA,KAACsB,EAAAA,EAAMG,OAAM,CAACC,aAAW,EAAA3B,UACvBC,EAAAA,EAAAA,KAACsB,EAAAA,EAAMK,MAAK,CAAA5B,SAAC,gCAEfC,EAAAA,EAAAA,KAACsB,EAAAA,EAAMM,KAAI,CAAA7B,UACTC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAI,CAAA9B,UACHF,EAAAA,EAAAA,MAACgC,EAAAA,EAAKC,MAAK,CAAC5B,UAAU,OAAO6B,UAAU,iBAAgBhC,SAAA,EACrDC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAKG,MAAK,CAAAjC,SAAC,0BACZC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAKI,QAAO,CACXC,KAAK,OACLC,YAAY,uBACZC,MAAO5F,EACP6F,aAAa,MACbC,SAAU,SAACC,GAAC,OAAK9F,EAAiB8F,EAAEC,OAAOJ,MAAM,KAEnDpC,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CACLlB,UAAU,mBACVmB,QAAS,kBAAMpC,EAAcwB,EAAKgC,IAAI,EAAC1C,SACxC,0BAQXC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,CACLsB,MAAO,CACLC,gBAAiB,MACjBC,MAAO,QACPC,OAAQ,QAEVxB,QAAS,WACP7B,EAAaiB,EAAKgC,IACpB,EAAE1C,SACH,eArDIW,EAyDJ,KAGPV,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIO,QAAS,EAAGL,UAAU,0BAAyBH,SAAC,iCAUlEC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAAAF,UACFC,EAAAA,EAAAA,KAAC8C,IAAa,CACZC,WAAW,MACXC,UAAU,SACVC,aAxIgB,SAACV,GACvB,IAAMW,EAAeX,EAAEY,SAAW,EAClCrG,EAAYmB,QAAUiF,EACtBjG,EAAiBiG,EACnB,EAqIQE,mBAAoB,EACpBxG,UAAWA,EACXyG,cAAc,aACdC,sBAAuB,KACvBC,qBAAsB,EACtBC,mBAAmB,oCACnBC,cAAc,YACdC,kBAAkB,YAClBC,kBAAkB,YAClBC,sBAAsB,YACtBC,cAAc,YACdC,kBAAkB,YAClBC,gBAAgB,eAK1B,C,sGCjMaC,EAAA,iGAMP3D,EAAqB4D,EAAAA,YAAiB,SAAA/G,EAWzCgH,GAAQ,IAVTC,EAAQjH,EAARiH,SACAjE,EAAShD,EAATgD,UACAkE,EAAOlH,EAAPkH,QACAC,EAAQnH,EAARmH,SACAC,EAAUpH,EAAVoH,WACAC,EAAKrH,EAALqH,MACAC,EAAItH,EAAJsH,KACAC,EAAOvH,EAAPuH,QACAnE,EAAUpD,EAAVoD,WACGoE,GAAKC,EAAAA,EAAAA,GAAAzH,EAAA8G,GAEFY,GAAoBC,EAAAA,EAAAA,IAAmBV,EAAU,SACjDW,EAAUC,IAAW7E,EAAW0E,EAAmBH,GAAW,GAAJzG,OAAO4G,EAAiB,KAAA5G,OAAIyG,GAAWD,GAAQ,GAAJxG,OAAO4G,EAAiB,KAAA5G,OAAIwG,GAAQJ,GAAW,GAAJpG,OAAO4G,EAAiB,KAAA5G,OAAuB,kBAAZoG,EAAuB,WAAHpG,OAAcoG,GAAY,WAAaC,GAAY,GAAJrG,OAAO4G,EAAiB,aAAaN,GAAc,GAAJtG,OAAO4G,EAAiB,eAAeL,GAAS,GAAJvG,OAAO4G,EAAiB,WACzWI,GAAqBhF,EAAAA,EAAAA,KAAK,SAAOiF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAClCP,GAAK,IACRxE,UAAW4E,EACXZ,IAAKA,KAEP,GAAI5D,EAAY,CACd,IAAI4E,EAAkB,GAAHlH,OAAM4G,EAAiB,eAI1C,MAH0B,kBAAftE,IACT4E,EAAkB,GAAHlH,OAAMkH,EAAe,KAAAlH,OAAIsC,KAEtBN,EAAAA,EAAAA,KAAK,MAAO,CAC9BE,UAAWgF,EACXnF,SAAUiF,GAEd,CACA,OAAOA,CACT,IACA,K","sources":["views/master-admin/AddWithdrawalReq.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import axios from 'axios'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { Badge, Button, Card, Container, Form, Modal, Row, Table } from 'react-bootstrap'\r\nimport { message } from 'antd'\r\nimport ReactPaginate from 'react-paginate'\r\n\r\nconst AddWithdrawalReq = () => {\r\n  const [walletWithdrawalRequest, setWalletWithdrawalRequest] = useState([])\r\n  const [show, setShow] = useState(false)\r\n  const [transactionId, setTransactionId] = useState('')\r\n  const limit = 8\r\n  const [pageCount, setPageCount] = useState(1)\r\n  const currentPage = useRef(1)\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => {\r\n    setShow(true)\r\n  }\r\n\r\n  const getPaginatedData = async (page) => {\r\n    try {\r\n      const res = await axios.get(\r\n        `/api/v1/masterAdmin/getWalletWithdrawalRequest?page=${currentPage.current}&limit=${limit}`,\r\n      )\r\n      if (res.data.success) {\r\n        const data = res.data.data\r\n        if (data.results.length === 0) {\r\n          setWalletWithdrawalRequest([])\r\n        } else {\r\n          setWalletWithdrawalRequest(data.results)\r\n          setPageCount(data.totalPages) // Use total pages from the response\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      message.error('Something went wrong')\r\n    }\r\n  }\r\n\r\n  const handlePageClick = (e) => {\r\n    const selectedPage = e.selected + 1\r\n    currentPage.current = selectedPage\r\n    getPaginatedData(selectedPage) // Fetch data for the selected page\r\n  }\r\n  useEffect(() => {\r\n    currentPage.current = 1\r\n    getPaginatedData()\r\n  }, [])\r\n\r\n  const handleApprove = async (id) => {\r\n    try {\r\n      const data = { transactionId }\r\n      const res = await axios.patch(\r\n        `/api/v1/masterAdmin/approveWalletWithdrawalRequest/${id}`,\r\n        data,\r\n      )\r\n      if (res.data.success) {\r\n        getPaginatedData()\r\n        handleClose()\r\n        message.success('Wallet withdrawal request approved successfully')\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  const handleReject = async (id) => {\r\n    try {\r\n      const res = await axios.patch(`/api/v1/masterAdmin/rejectWalletWithdrawalRequest/${id}`)\r\n      if (res.data.success) {\r\n        getPaginatedData()\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"mb-3\">\r\n        <Container fluid>\r\n          <h3>Wallet withdrawal request</h3>\r\n          <Row>\r\n            <Table responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"text-center\">Sn</th>\r\n                  <th className=\"text-center\">Date</th>\r\n                  <th className=\"text-center\">Name</th>\r\n                  <th className=\"text-center\">UniqueId</th>\r\n                  <th className=\"text-center\">Amount</th>\r\n                  <th className=\"text-center\">Bank Name</th>\r\n                  <th className=\"text-center\">IFSC Code</th>\r\n                  <th className=\"text-center\" colSpan={2}>\r\n                    Action\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {walletWithdrawalRequest && walletWithdrawalRequest.length > 0 ? (\r\n                  walletWithdrawalRequest.map((item, index) => (\r\n                    <tr key={index}>\r\n                      <td className=\"text-center\">{index + 1}</td>\r\n                      <td className=\"text-center\">{new Date(item.date).toLocaleDateString()}</td>\r\n                      <td className=\"text-center\">{item.userId.name}</td>\r\n                      <td className=\"text-center\">{item.userId.uniqueId}</td>\r\n                      <td className=\"text-center\">{item.amount}</td>\r\n                      <td className=\"text-center\">{item.bankName.split(' ')[0]}</td>\r\n                      <td className=\"text-center\">{item.bankName.split(' ')[1]}</td>\r\n                      <td className=\"text-center\">\r\n                        <Button\r\n                          className=\"bg-success border-0\"\r\n                          onClick={() => {\r\n                            handleShow()\r\n                          }}\r\n                        >\r\n                          Approve\r\n                        </Button>\r\n                        <Modal show={show} onHide={handleClose} animation={false}>\r\n                          <Modal.Header closeButton>\r\n                            <Modal.Title>Approve Wallet Withrawal</Modal.Title>\r\n                          </Modal.Header>\r\n                          <Modal.Body>\r\n                            <Form>\r\n                              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\" >\r\n                                <Form.Label>Enter Transaction ID</Form.Label>\r\n                                <Form.Control\r\n                                  type=\"text\"\r\n                                  placeholder=\"Enter Transaction Id\"\r\n                                  value={transactionId}\r\n                                  autoComplete='off'\r\n                                  onChange={(e) => setTransactionId(e.target.value)}\r\n                                />\r\n                                <Button\r\n                                  className=\"myCustomBtn mt-3\"\r\n                                  onClick={() => handleApprove(item._id)}\r\n                                >\r\n                                  Approve\r\n                                </Button>\r\n                              </Form.Group>\r\n                            </Form>\r\n                          </Modal.Body>\r\n                        </Modal>\r\n                      </td>\r\n                      <td>\r\n                        <Button\r\n                          style={{\r\n                            backgroundColor: 'red',\r\n                            color: 'white',\r\n                            border: 'none',\r\n                          }}\r\n                          onClick={() => {\r\n                            handleReject(item._id)\r\n                          }}\r\n                        >\r\n                          Reject\r\n                        </Button>\r\n                      </td>\r\n                    </tr>\r\n                  ))\r\n                ) : (\r\n                  <tr>\r\n                    <td colSpan={9} className=\"text-center text-danger\">\r\n                      No data found\r\n                    </td>\r\n                  </tr>\r\n                )}\r\n              </tbody>\r\n            </Table>\r\n          </Row>\r\n        </Container>\r\n      </Row>\r\n      <Row>\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\"next >\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"< previous\"\r\n          renderOnZeroPageCount={null}\r\n          marginPagesDisplayed={2}\r\n          containerClassName=\"pagination justify-content-center\"\r\n          pageClassName=\"page-item\"\r\n          pageLinkClassName=\"page-link\"\r\n          previousClassName=\"page-item\"\r\n          previousLinkClassName=\"page-link\"\r\n          nextClassName=\"page-item\"\r\n          nextLinkClassName=\"page-link\"\r\n          activeClassName=\"active\"\r\n        />\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AddWithdrawalReq\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["_useState","useState","_useState2","_slicedToArray","walletWithdrawalRequest","setWalletWithdrawalRequest","_useState3","_useState4","show","setShow","_useState5","_useState6","transactionId","setTransactionId","_useState7","_useState8","pageCount","setPageCount","currentPage","useRef","handleClose","getPaginatedData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","res","data","wrap","_context","prev","next","axios","get","concat","current","sent","success","results","length","totalPages","t0","console","log","message","error","stop","_x","apply","arguments","useEffect","handleApprove","_ref2","_callee2","id","_context2","patch","_x2","handleReject","_ref3","_callee3","_context3","_x3","_jsxs","_Fragment","children","_jsx","Row","className","Container","fluid","Table","responsive","colSpan","map","item","index","Date","date","toLocaleDateString","userId","name","uniqueId","amount","bankName","split","Button","onClick","Modal","onHide","animation","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","type","placeholder","value","autoComplete","onChange","e","target","_id","style","backgroundColor","color","border","ReactPaginate","breakLabel","nextLabel","onPageChange","selectedPage","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","marginPagesDisplayed","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","activeClassName","_excluded","React","ref","bsPrefix","striped","bordered","borderless","hover","size","variant","props","_objectWithoutProperties","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_objectSpread","responsiveClass"],"sourceRoot":""}