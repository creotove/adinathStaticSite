{"version":3,"file":"static/js/366.cc18b31f.chunk.js","mappings":"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","sources":["views/approveUser/ApproveRetailer.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { Button, Container, Row } from 'react-bootstrap'\r\nimport { message } from 'antd'\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CTable,\r\n  CTableHead,\r\n  CTableBody,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n  CTableDataCell,\r\n} from '@coreui/react'\r\nimport ReactPaginate from 'react-paginate'\r\nimport axios from 'axios'\r\nconst ApproveRetailer = () => {\r\n  const [approvalReqUser, setApprovalReqUser] = useState([])\r\n  const limit = 5\r\n  const [pageCount, setPageCount] = useState(1)\r\n  const currentPage = useRef(1)\r\n\r\n  const getPaginatedData = async (page) => {\r\n    // Pass the page number as an argument\r\n    try {\r\n      const res = await axios.get(\r\n        `/api/v1/masterAdmin/getRetailerForApproval?page=${currentPage.current}&limit=${limit}`,\r\n      )\r\n      if (res.data.success) {\r\n        const data = res.data.data\r\n        if (data.results.length === 0) {\r\n          setApprovalReqUser([]) // Set to an empty array when there's no data\r\n        } else {\r\n          setApprovalReqUser(data.results)\r\n          setPageCount(data.totalPages) // Use total pages from the response\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      message.error('Something went wrong')\r\n    }\r\n  }\r\n  const handlePageClick = (e) => {\r\n    const selectedPage = e.selected + 1\r\n    currentPage.current = selectedPage\r\n    getPaginatedData(selectedPage) // Fetch data for the selected page\r\n  }\r\n\r\n  useEffect(() => {\r\n    currentPage.current = 1\r\n    getPaginatedData()\r\n  }, [])\r\n  const approveUser = async (uniqueId) => {\r\n    try {\r\n      const res = await axios.patch('/api/v1/masterAdmin/approveUser', { uniqueId })\r\n      if (res.data.success) {\r\n        message.success(res.data.message)\r\n      } else {\r\n        message.error(res.data.message)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      message.error('Something went wrong')\r\n    }\r\n  }\r\n  const rejectUser = async (uniqueId) => {\r\n    try {\r\n      const res = await axios.patch('/api/v1/masterAdmin/rejectUser', { uniqueId })\r\n      if (res.data.success) {\r\n        message.success(res.data.message)\r\n      } else {\r\n        message.error(res.data.message)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      message.error('Something went wrong')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Container fluid>\r\n          <CRow className=\"mb-4\">\r\n            <CCol xs>\r\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\r\n                <CTableHead color=\"light\">\r\n                  <CTableRow>\r\n                    <CTableHeaderCell className=\"text-center\">#</CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"text-center\">Transaction Id</CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"text-center\">Paid</CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"text-center\">Unique Id</CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"text-center\">Role </CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"text-center\">Name</CTableHeaderCell>\r\n                    <CTableDataCell className=\"text-center\" colSpan={2}>\r\n                      Action\r\n                    </CTableDataCell>\r\n                  </CTableRow>\r\n                </CTableHead>\r\n                <CTableBody>\r\n                  {approvalReqUser && approvalReqUser.length > 0 ? (\r\n                    approvalReqUser.map((user, index) => (\r\n                      <CTableRow v-for=\"item in tableItems\" key={index}>\r\n                        <CTableDataCell className=\"text-center\">{index + 1}</CTableDataCell>\r\n                        <CTableDataCell className=\"text-center\">{user.name}</CTableDataCell>\r\n                        <CTableDataCell className=\"text-center\">{user.uniqueId}</CTableDataCell>\r\n                        <CTableDataCell className=\"text-center\">{user.mobileNumber}</CTableDataCell>\r\n                        <CTableDataCell className=\"text-center\">{user.aadharCard}</CTableDataCell>\r\n                        <CTableDataCell className=\"text-center\">{user.panCard}</CTableDataCell>\r\n                        <CTableDataCell className=\"text-center\">{user.city}</CTableDataCell>\r\n                        <CTableDataCell className=\"text-center\">\r\n                          <Button\r\n                            style={{\r\n                              backgroundColor: 'red',\r\n                              border: 'none',\r\n                            }}\r\n                            className=\"mx-3\"\r\n                            onClick={() => rejectUser(user.uniqueId)}\r\n                          >\r\n                            Reject\r\n                          </Button>\r\n                          <Button\r\n                            className=\"btn-success text-white\"\r\n                            onClick={() => approveUser(user.uniqueId)}\r\n                          >\r\n                            Approve\r\n                          </Button>\r\n                        </CTableDataCell>\r\n                      </CTableRow>\r\n                    ))\r\n                  ) : (\r\n                    <CTableRow>\r\n                      <CTableDataCell colSpan={8} className=\"text-center text-danger\">\r\n                        No Data Found\r\n                      </CTableDataCell>\r\n                    </CTableRow>\r\n                  )}\r\n                </CTableBody>\r\n              </CTable>\r\n            </CCol>\r\n          </CRow>\r\n        </Container>\r\n      </Row>\r\n      <Row>\r\n        {' '}\r\n        <ReactPaginate\r\n          breakLabel=\"...\"\r\n          nextLabel=\"next >\"\r\n          onPageChange={handlePageClick}\r\n          pageRangeDisplayed={5}\r\n          pageCount={pageCount}\r\n          previousLabel=\"< previous\"\r\n          renderOnZeroPageCount={null}\r\n          marginPagesDisplayed={2}\r\n          containerClassName=\"pagination justify-content-center\"\r\n          pageClassName=\"page-item\"\r\n          pageLinkClassName=\"page-link\"\r\n          previousClassName=\"page-item\"\r\n          previousLinkClassName=\"page-link\"\r\n          nextClassName=\"page-item\"\r\n          nextLinkClassName=\"page-link\"\r\n          activeClassName=\"active\"\r\n        />\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ApproveRetailer\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","approvalReqUser","setApprovalReqUser","_useState3","_useState4","pageCount","setPageCount","currentPage","useRef","getPaginatedData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","res","data","wrap","_context","prev","next","axios","get","concat","current","sent","success","results","length","totalPages","t0","console","log","message","error","stop","_x","apply","arguments","useEffect","approveUser","_ref2","_callee2","uniqueId","_context2","patch","_x2","rejectUser","_ref3","_callee3","_context3","_x3","_jsxs","_Fragment","children","_jsx","Row","Container","fluid","CRow","className","CCol","xs","CTable","align","hover","responsive","CTableHead","color","CTableRow","CTableHeaderCell","CTableDataCell","colSpan","CTableBody","map","user","index","name","mobileNumber","aadharCard","panCard","city","Button","style","backgroundColor","border","onClick","ReactPaginate","breakLabel","nextLabel","onPageChange","e","selectedPage","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","marginPagesDisplayed","containerClassName","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","activeClassName"],"sourceRoot":""}