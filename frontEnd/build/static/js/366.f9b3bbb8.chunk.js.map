{"version":3,"file":"static/js/366.f9b3bbb8.chunk.js","mappings":"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","sources":["views/approveUser/ApproveRetailer.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Button, Container } from 'react-bootstrap'\r\nimport { message } from 'antd'\r\nimport axois from 'axios'\r\nimport {\r\n  CRow,\r\n  CCol,\r\n  CTable,\r\n  CTableHead,\r\n  CTableBody,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n  CTableDataCell,\r\n} from '@coreui/react'\r\nconst ApproveRetailer = () => {\r\n  console.log('rendering approve user page')\r\n  const [approvalReqUser, setApprovalReqUser] = useState([])\r\n\r\n  const findUserForApproval = async () => {\r\n    try {\r\n      const res = await axois.get('/api/v1/masterAdmin/getRetailerForApproval')\r\n      if (res.data.success) {\r\n        if(res.data.data.length === 0){\r\n          setApprovalReqUser(null)\r\n        }else{\r\n          setApprovalReqUser(res.data.data)\r\n        }\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.log(error)\r\n      message.error('Something went wrong')\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    findUserForApproval()\r\n  }, [])\r\n  const approveUser = async (uniqueId) => {\r\n    try {\r\n      const res = await axois.patch('/api/v1/masterAdmin/approveUser',{uniqueId})\r\n      if (res.data.success) {\r\n        message.success(res.data.message)\r\n        findUserForApproval()\r\n      } else {\r\n        message.error(res.data.message)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      message.error('Something went wrong')\r\n    }\r\n  }\r\n  const rejectUser = async (uniqueId) => {\r\n    try {\r\n      const res = await axois.patch('/api/v1/masterAdmin/rejectUser',{uniqueId})\r\n      if (res.data.success) {\r\n        message.success(res.data.message)\r\n        findUserForApproval()\r\n      } else {\r\n        message.error(res.data.message)\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      message.error('Something went wrong')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <CRow className=\"mb-4\">\r\n        <CCol xs>\r\n          <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\r\n            <CTableHead color=\"light\">\r\n              <CTableRow>\r\n                <CTableHeaderCell className=\"text-center\">#</CTableHeaderCell>\r\n                <CTableHeaderCell className=\"text-center\">Transaction Id</CTableHeaderCell>\r\n                <CTableHeaderCell className=\"text-center\">Paid</CTableHeaderCell>\r\n                <CTableHeaderCell className=\"text-center\">Unique Id</CTableHeaderCell>\r\n                <CTableHeaderCell className=\"text-center\">Role </CTableHeaderCell>\r\n                <CTableHeaderCell className=\"text-center\">Name</CTableHeaderCell>\r\n                <CTableDataCell className=\"text-center\" colSpan={2}>\r\n                  Action\r\n                </CTableDataCell>\r\n              </CTableRow>\r\n            </CTableHead>\r\n            <CTableBody>\r\n              {approvalReqUser &&\r\n                approvalReqUser.map((user, index) => (\r\n                  <CTableRow v-for=\"item in tableItems\" key={index + 1}>\r\n                    <CTableDataCell className=\"text-center\">{index + 1}</CTableDataCell>\r\n                    <CTableDataCell className=\"text-center\">{user.transactionId}</CTableDataCell>\r\n                    <CTableDataCell className=\"text-center\">{user.paid ? \"Paid\" : \"False\"}</CTableDataCell>\r\n                    <CTableDataCell className=\"text-center\">{user.uniqueId}</CTableDataCell>\r\n                    <CTableDataCell className=\"text-center\">{user.role}</CTableDataCell>\r\n                    <CTableDataCell className=\"text-center\">{user.name}</CTableDataCell>\r\n                    <CTableDataCell className=\"text-center\">\r\n                      <Button\r\n                        style={{\r\n                          backgroundColor: 'red',\r\n                          border: 'none',\r\n                        }}\r\n                        className='mx-3'\r\n                        onClick={() => rejectUser(user.uniqueId)}\r\n                      >\r\n                        Reject\r\n                      </Button>\r\n                      <Button\r\n                        className=\"btn-success text-white\"\r\n                        onClick={() => approveUser(user.uniqueId)}\r\n                      >\r\n                        Approve\r\n                      </Button>\r\n                    </CTableDataCell>\r\n                  </CTableRow>\r\n                ))}\r\n            </CTableBody>\r\n          </CTable>\r\n        </CCol>\r\n      </CRow>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ApproveRetailer\r\n"],"names":["console","log","_useState","useState","_useState2","_slicedToArray","approvalReqUser","setApprovalReqUser","findUserForApproval","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axois","get","sent","data","success","length","t0","message","error","stop","apply","arguments","useEffect","approveUser","_ref2","_callee2","uniqueId","_context2","patch","_x","rejectUser","_ref3","_callee3","_context3","_x2","_jsx","Container","fluid","children","CRow","className","CCol","xs","_jsxs","CTable","align","hover","responsive","CTableHead","color","CTableRow","CTableHeaderCell","CTableDataCell","colSpan","CTableBody","map","user","index","transactionId","paid","role","name","Button","style","backgroundColor","border","onClick"],"sourceRoot":""}